// –í–ê–® –¢–û–ö–ï–ù –ò CHAT ID –£–ñ–ï –ù–ê–°–¢–†–û–ï–ù–´
const TELEGRAM_BOT_TOKEN = '8283808797:AAEymrhAgZg8BMCSq30iCLAl7cOi4XkWN-k';
const TELEGRAM_CHAT_ID = '475597372';

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function checkConfig() {
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
async function sendToTelegram(formData) {
    if (!checkConfig()) {
        return { success: false, error: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Chat ID' };
    }

    const message = `üî• –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê BOOSTRIX!

üë§ –ò–º—è: ${formData.name}
üì± Telegram: ${formData.telegram}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;

    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram...');

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'HTML'
            })
        });

        const responseData = await response.json();
        console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', responseData);

        if (response.ok && responseData.ok) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            return { success: true };
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç Telegram API:', responseData);
            
            let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
            if (responseData.error_code === 400) {
                errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π Chat ID. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å Chat ID.';
            } else if (responseData.description) {
                errorMessage = responseData.description;
            }
            
            return { 
                success: false, 
                error: `–û—à–∏–±–∫–∞ ${responseData.error_code}: ${errorMessage}` 
            };
        }
    } catch (error) {
        console.error('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error);
        return { 
            success: false, 
            error: `–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.message}` 
        };
    }
}

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testConnection() {
    const result = await sendToTelegram({
        name: '–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
        telegram: '@test',
        message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞'
    });
    
    if (result.success) {
        alert('‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    } else {
        alert(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testButton = document.createElement('button');
    testButton.textContent = 'üß™ –¢–µ—Å—Ç –±–æ—Ç–∞';
    testButton.style.cssText = 'position:fixed;top:10px;right:10px;z-index:9999;padding:10px;background:#28a745;color:white;border:none;border-radius:5px;cursor:pointer;font-size:12px;';
    testButton.onclick = testConnection;
    document.body.appendChild(testButton);

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID (–±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞)
    const infoButton = document.createElement('button');
    infoButton.textContent = '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ!';
    infoButton.style.cssText = 'position:fixed;top:60px;right:10px;z-index:9999;padding:10px;background:#28a745;color:white;border:none;border-radius:5px;cursor:pointer;font-size:12px;';
    infoButton.onclick = function() {
        alert('‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω!\n\n–¢–æ–∫–µ–Ω: 8283808797:AAE...\nChat ID: 475597372\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—ã!');
    };
    document.body.appendChild(infoButton);

    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞
    const contactForm = document.getElementById('contactForm');
    if (contactForm) {
        contactForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('name').value,
                telegram: document.getElementById('telegram').value,
                message: document.getElementById('message').value
            };

            const submitBtn = this.querySelector('.submit-btn');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
            submitBtn.disabled = true;

            const result = await sendToTelegram(formData);

            if (result.success) {
                alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                this.reset();
            } else {
                alert(`‚ùå –û—à–∏–±–∫–∞: ${result.error}\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ Telegram: @egor_digital`);
            }

            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        });
    }

    // –ú–æ–¥–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞
    const modalForm = document.getElementById('modalForm');
    if (modalForm) {
        modalForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('modalName').value,
                telegram: document.getElementById('modalTelegram').value,
                message: '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
            };

            const submitBtn = this.querySelector('.submit-btn');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
            submitBtn.disabled = true;

            const result = await sendToTelegram(formData);

            if (result.success) {
                alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                this.reset();
                if (typeof closeModal === 'function') closeModal();
            } else {
                alert(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
            }

            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        });
    }
});

// –§—É–Ω–∫—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal() {
    const modal = document.getElementById('modal');
    if (modal) modal.style.display = 'block';
}

function closeModal() {
    const modal = document.getElementById('modal');
    if (modal) modal.style.display = 'none';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.addEventListener('DOMContentLoaded', function() {
    const closeBtn = document.querySelector('.close');
    if (closeBtn) closeBtn.addEventListener('click', closeModal);

    window.addEventListener('click', function(e) {
        const modal = document.getElementById('modal');
        if (e.target === modal) closeModal();
    });
});
